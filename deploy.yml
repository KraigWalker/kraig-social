name: WIP Deploy to Raspberry Pi

on:
  workflow_run:
    workflows: ["Build and Push Image to GitHub Container Registry"] # name of the first workflow
    types: [completed]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Raspberry Pi
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Install cloudflared
        run: |
          curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb -o cloudflared.deb
          sudo dpkg -i cloudflared.deb

      - name: Trust SSH Host Key
        # This step is optional if you want to avoid host key checking issues.
        # Replace ssh.kraig.social with your domain.
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ssh.kraig.social >> ~/.ssh/known_hosts

      - name: Generate short-lived certificate and SSH config
        env:
          CF_ACCESS_CLIENT_ID: ${{ secrets.CF_ACCESS_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}
        run: |
          # cloudflared uses these env vars to authenticate to Access.
          # --short-lived-cert returns an SSH config snippet that includes a temporary IdentityFile (cert)
          cloudflared access ssh --short-lived-cert --hostname ssh.kraig.social > ssh_config
          chmod 600 ssh_config

      - name: Deploy command over SSH
        # This uses the ssh_config generated by cloudflared.
        # It tells ssh to use the ProxyCommand through cloudflared.
        run: |
          ssh -F ssh_config deploy@ssh.kraig.social "docker service update --force --image ghcr.io/kraigwalker/kraig-social:latest kraigsocial_web || docker stack deploy -c /path/to/docker-stack.yml kraigsocial"
